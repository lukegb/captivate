// Code generated by protoc-gen-go. DO NOT EDIT.
// source: captivated.proto

/*
Package captivated is a generated protocol buffer package.

It is generated from these files:
	captivated.proto
	macvland.proto

It has these top-level messages:
	SawClientRequest
	SawClientReply
	WatchVLANAssignmentChangeRequest
	VLANAssignmentChange
	ClientAuthenticatedRequest
	ClientAuthenticatedReply
	ListInterfacesRequest
	ListInterfacesReply
	ListMACsRequest
	ListMACsReply
	GetInterfaceRequest
	GetInterfaceReply
	AuthoriseRequest
	AuthoriseReply
*/
package captivated

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type SawClientRequest struct {
	Mac string `protobuf:"bytes,1,opt,name=mac" json:"mac,omitempty"`
}

func (m *SawClientRequest) Reset()                    { *m = SawClientRequest{} }
func (m *SawClientRequest) String() string            { return proto.CompactTextString(m) }
func (*SawClientRequest) ProtoMessage()               {}
func (*SawClientRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *SawClientRequest) GetMac() string {
	if m != nil {
		return m.Mac
	}
	return ""
}

type SawClientReply struct {
	Vlan uint32 `protobuf:"varint,1,opt,name=vlan" json:"vlan,omitempty"`
}

func (m *SawClientReply) Reset()                    { *m = SawClientReply{} }
func (m *SawClientReply) String() string            { return proto.CompactTextString(m) }
func (*SawClientReply) ProtoMessage()               {}
func (*SawClientReply) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *SawClientReply) GetVlan() uint32 {
	if m != nil {
		return m.Vlan
	}
	return 0
}

type WatchVLANAssignmentChangeRequest struct {
}

func (m *WatchVLANAssignmentChangeRequest) Reset()         { *m = WatchVLANAssignmentChangeRequest{} }
func (m *WatchVLANAssignmentChangeRequest) String() string { return proto.CompactTextString(m) }
func (*WatchVLANAssignmentChangeRequest) ProtoMessage()    {}
func (*WatchVLANAssignmentChangeRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{2}
}

type VLANAssignmentChange struct {
	Mac  string `protobuf:"bytes,1,opt,name=mac" json:"mac,omitempty"`
	Vlan uint32 `protobuf:"varint,2,opt,name=vlan" json:"vlan,omitempty"`
}

func (m *VLANAssignmentChange) Reset()                    { *m = VLANAssignmentChange{} }
func (m *VLANAssignmentChange) String() string            { return proto.CompactTextString(m) }
func (*VLANAssignmentChange) ProtoMessage()               {}
func (*VLANAssignmentChange) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *VLANAssignmentChange) GetMac() string {
	if m != nil {
		return m.Mac
	}
	return ""
}

func (m *VLANAssignmentChange) GetVlan() uint32 {
	if m != nil {
		return m.Vlan
	}
	return 0
}

type ClientAuthenticatedRequest struct {
	Mac   string `protobuf:"bytes,1,opt,name=mac" json:"mac,omitempty"`
	Email string `protobuf:"bytes,2,opt,name=email" json:"email,omitempty"`
}

func (m *ClientAuthenticatedRequest) Reset()                    { *m = ClientAuthenticatedRequest{} }
func (m *ClientAuthenticatedRequest) String() string            { return proto.CompactTextString(m) }
func (*ClientAuthenticatedRequest) ProtoMessage()               {}
func (*ClientAuthenticatedRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *ClientAuthenticatedRequest) GetMac() string {
	if m != nil {
		return m.Mac
	}
	return ""
}

func (m *ClientAuthenticatedRequest) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

type ClientAuthenticatedReply struct {
}

func (m *ClientAuthenticatedReply) Reset()                    { *m = ClientAuthenticatedReply{} }
func (m *ClientAuthenticatedReply) String() string            { return proto.CompactTextString(m) }
func (*ClientAuthenticatedReply) ProtoMessage()               {}
func (*ClientAuthenticatedReply) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func init() {
	proto.RegisterType((*SawClientRequest)(nil), "captivated.SawClientRequest")
	proto.RegisterType((*SawClientReply)(nil), "captivated.SawClientReply")
	proto.RegisterType((*WatchVLANAssignmentChangeRequest)(nil), "captivated.WatchVLANAssignmentChangeRequest")
	proto.RegisterType((*VLANAssignmentChange)(nil), "captivated.VLANAssignmentChange")
	proto.RegisterType((*ClientAuthenticatedRequest)(nil), "captivated.ClientAuthenticatedRequest")
	proto.RegisterType((*ClientAuthenticatedReply)(nil), "captivated.ClientAuthenticatedReply")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for Captivate service

type CaptivateClient interface {
	// Informs Captivate that a new client has appeared.
	SawClient(ctx context.Context, in *SawClientRequest, opts ...grpc.CallOption) (*SawClientReply, error)
	// Allows Captivate to inform clients that a VLAN assignment has changed.
	WatchVLANAssignmentChange(ctx context.Context, in *WatchVLANAssignmentChangeRequest, opts ...grpc.CallOption) (Captivate_WatchVLANAssignmentChangeClient, error)
	// Informs Captivate that a client has authenticated.
	ClientAuthenticated(ctx context.Context, in *ClientAuthenticatedRequest, opts ...grpc.CallOption) (*ClientAuthenticatedReply, error)
}

type captivateClient struct {
	cc *grpc.ClientConn
}

func NewCaptivateClient(cc *grpc.ClientConn) CaptivateClient {
	return &captivateClient{cc}
}

func (c *captivateClient) SawClient(ctx context.Context, in *SawClientRequest, opts ...grpc.CallOption) (*SawClientReply, error) {
	out := new(SawClientReply)
	err := grpc.Invoke(ctx, "/captivated.Captivate/SawClient", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *captivateClient) WatchVLANAssignmentChange(ctx context.Context, in *WatchVLANAssignmentChangeRequest, opts ...grpc.CallOption) (Captivate_WatchVLANAssignmentChangeClient, error) {
	stream, err := grpc.NewClientStream(ctx, &_Captivate_serviceDesc.Streams[0], c.cc, "/captivated.Captivate/WatchVLANAssignmentChange", opts...)
	if err != nil {
		return nil, err
	}
	x := &captivateWatchVLANAssignmentChangeClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type Captivate_WatchVLANAssignmentChangeClient interface {
	Recv() (*VLANAssignmentChange, error)
	grpc.ClientStream
}

type captivateWatchVLANAssignmentChangeClient struct {
	grpc.ClientStream
}

func (x *captivateWatchVLANAssignmentChangeClient) Recv() (*VLANAssignmentChange, error) {
	m := new(VLANAssignmentChange)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *captivateClient) ClientAuthenticated(ctx context.Context, in *ClientAuthenticatedRequest, opts ...grpc.CallOption) (*ClientAuthenticatedReply, error) {
	out := new(ClientAuthenticatedReply)
	err := grpc.Invoke(ctx, "/captivated.Captivate/ClientAuthenticated", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Captivate service

type CaptivateServer interface {
	// Informs Captivate that a new client has appeared.
	SawClient(context.Context, *SawClientRequest) (*SawClientReply, error)
	// Allows Captivate to inform clients that a VLAN assignment has changed.
	WatchVLANAssignmentChange(*WatchVLANAssignmentChangeRequest, Captivate_WatchVLANAssignmentChangeServer) error
	// Informs Captivate that a client has authenticated.
	ClientAuthenticated(context.Context, *ClientAuthenticatedRequest) (*ClientAuthenticatedReply, error)
}

func RegisterCaptivateServer(s *grpc.Server, srv CaptivateServer) {
	s.RegisterService(&_Captivate_serviceDesc, srv)
}

func _Captivate_SawClient_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SawClientRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CaptivateServer).SawClient(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/captivated.Captivate/SawClient",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CaptivateServer).SawClient(ctx, req.(*SawClientRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Captivate_WatchVLANAssignmentChange_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(WatchVLANAssignmentChangeRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(CaptivateServer).WatchVLANAssignmentChange(m, &captivateWatchVLANAssignmentChangeServer{stream})
}

type Captivate_WatchVLANAssignmentChangeServer interface {
	Send(*VLANAssignmentChange) error
	grpc.ServerStream
}

type captivateWatchVLANAssignmentChangeServer struct {
	grpc.ServerStream
}

func (x *captivateWatchVLANAssignmentChangeServer) Send(m *VLANAssignmentChange) error {
	return x.ServerStream.SendMsg(m)
}

func _Captivate_ClientAuthenticated_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ClientAuthenticatedRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CaptivateServer).ClientAuthenticated(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/captivated.Captivate/ClientAuthenticated",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CaptivateServer).ClientAuthenticated(ctx, req.(*ClientAuthenticatedRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Captivate_serviceDesc = grpc.ServiceDesc{
	ServiceName: "captivated.Captivate",
	HandlerType: (*CaptivateServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "SawClient",
			Handler:    _Captivate_SawClient_Handler,
		},
		{
			MethodName: "ClientAuthenticated",
			Handler:    _Captivate_ClientAuthenticated_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "WatchVLANAssignmentChange",
			Handler:       _Captivate_WatchVLANAssignmentChange_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "captivated.proto",
}

func init() { proto.RegisterFile("captivated.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 271 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x84, 0x92, 0x4f, 0x4b, 0xc3, 0x40,
	0x10, 0xc5, 0x9b, 0xfa, 0x07, 0x32, 0xa0, 0x84, 0xb1, 0x87, 0xba, 0x78, 0x08, 0x4b, 0x10, 0x0f,
	0x52, 0x44, 0xaf, 0x5e, 0x42, 0x04, 0x2f, 0xe2, 0x21, 0x82, 0x9e, 0xd7, 0x38, 0x34, 0x81, 0xcd,
	0x66, 0x35, 0xd3, 0x4a, 0xbe, 0x93, 0x1f, 0x52, 0xba, 0xd5, 0xba, 0xd8, 0x84, 0xde, 0x26, 0x99,
	0x37, 0xf3, 0xe6, 0xfd, 0x58, 0x88, 0x0a, 0x65, 0xb9, 0x5a, 0x2a, 0xa6, 0xb7, 0x99, 0xfd, 0x68,
	0xb8, 0x41, 0xf8, 0xfb, 0x23, 0x13, 0x88, 0x9e, 0xd4, 0x67, 0xa6, 0x2b, 0x32, 0x9c, 0xd3, 0xfb,
	0x82, 0x5a, 0xc6, 0x08, 0xf6, 0x6a, 0x55, 0x4c, 0x83, 0x38, 0xb8, 0x08, 0xf3, 0x55, 0x29, 0x13,
	0x38, 0xf6, 0x54, 0x56, 0x77, 0x88, 0xb0, 0xbf, 0xd4, 0xca, 0x38, 0xd1, 0x51, 0xee, 0x6a, 0x29,
	0x21, 0x7e, 0x51, 0x5c, 0x94, 0xcf, 0x0f, 0xe9, 0x63, 0xda, 0xb6, 0xd5, 0xdc, 0xd4, 0x64, 0x38,
	0x2b, 0x95, 0x99, 0xd3, 0xcf, 0x6e, 0x79, 0x0b, 0x93, 0xbe, 0xf6, 0xb6, 0xe7, 0xc6, 0x61, 0xec,
	0x39, 0xdc, 0x81, 0x58, 0x1f, 0x91, 0x2e, 0xb8, 0x24, 0xc3, 0x55, 0xb1, 0x0a, 0x31, 0x78, 0x37,
	0x4e, 0xe0, 0x80, 0x6a, 0x55, 0x69, 0xb7, 0x24, 0xcc, 0xd7, 0x1f, 0x52, 0xc0, 0xb4, 0x77, 0x8b,
	0xd5, 0xdd, 0xf5, 0xd7, 0x18, 0xc2, 0xec, 0x17, 0x0f, 0xde, 0x43, 0xb8, 0xc9, 0x8d, 0x67, 0x33,
	0x8f, 0xe4, 0x7f, 0x68, 0x42, 0x0c, 0x74, 0xad, 0xee, 0xe4, 0x08, 0x1b, 0x38, 0x1d, 0x44, 0x83,
	0x97, 0xfe, 0xe8, 0x2e, 0x82, 0x22, 0xf6, 0xd5, 0x7d, 0x42, 0x39, 0xba, 0x0a, 0x90, 0xe0, 0xa4,
	0x27, 0x23, 0x9e, 0xfb, 0xc3, 0xc3, 0x28, 0x45, 0xb2, 0x53, 0xe7, 0x72, 0xbd, 0x1e, 0xba, 0x17,
	0x75, 0xf3, 0x1d, 0x00, 0x00, 0xff, 0xff, 0x93, 0x51, 0x74, 0xe0, 0x65, 0x02, 0x00, 0x00,
}
